<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- TextBox -->
    <Style TargetType="{x:Type TextBox}" x:Key="textBoxGlobalTemplate">
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
    </Style>

    <!-- Button -->
    <Style TargetType="{x:Type Button}" x:Key="buttonGlobalTemplate">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonSelectBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonSelectBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonSelectBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonSelectBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonNotEnableBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ButtonNotEnableBorderBrush}"/>
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource ButtonNotEnableForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox -->
    <Style TargetType="{x:Type ListBox}" x:Key="listBoxGlobalTemplate">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ListBoxBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="sympleStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="1, 0, 1, 1" BorderBrush="{StaticResource ItemBorderBrush}" Padding="3" x:Name="mainBorder">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="{Binding FirstName}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding SecondName}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Row="2" Text="{Binding ReleaseDate}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Rating}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource ItemSelectedBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="compactStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="1, 0, 1, 1" BorderBrush="{StaticResource ItemBorderBrush}" Padding="3" x:Name="mainBorder">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.28*"/>
                                <RowDefinition Height="0.28*"/>
                                <RowDefinition Height="0.28*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.18*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.RowSpan="3" Source="{Binding TitleImage}" Height="80" Margin="0, 0, 3, 0"/>
                            <TextBlock Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding FirstName}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Text="{Binding SecondName}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding ReleaseDate}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Rating}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource ItemSelectedBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="extendedStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="1, 0, 1, 1" BorderBrush="{StaticResource ItemBorderBrush}" Padding="3" x:Name="mainBorder">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.ColumnSpan="3" Text="{Binding FirstName}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" TextWrapping="Wrap"/>
                            <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="{Binding SecondName}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="11" TextWrapping="Wrap"/>
                            <Image Grid.Row="2" Grid.ColumnSpan="3" Source="{Binding TitleImage}" Height="150" Margin="5"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="{Binding ReleaseDate}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding Rating}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource ItemSelectedBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Label -->
    <Style TargetType="{x:Type Label}" x:Key="labelGlobalTemplate">
        <Setter Property="Foreground" Value="{StaticResource LabelForegroundBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="titleLabelGlobalTemplate">
        <Setter Property="Background" Value="{StaticResource TitleLabelBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TitleLabelForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0, 0, 0, 15"/>
    </Style>

    <!-- TextBlock -->
    <Style TargetType="{x:Type TextBlock}" x:Key="textBlockGlobalTemplate">
        <Setter Property="Background" Value="{StaticResource TextBlockBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBlockForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
    </Style>

    <!-- StatusBar -->
    <Style TargetType="{x:Type StatusBar}" x:Key="statusBarGlobalTemplate">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border Padding="1" BorderThickness="0, 1, 0, 0"
                            BorderBrush="{StaticResource StatusBarBorderBrush}"
                            Background="{StaticResource StatusBarBacgroundBrush}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}" x:Key="{x:Static StatusBar.SeparatorStyleKey}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Width="1" 
                               Margin="3"
                               Fill="{StaticResource StatusBarSeparatorBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToolBar -->
    <Style TargetType="{x:Type Button}" x:Key="{x:Static ToolBar.ButtonStyleKey}" BasedOn="{StaticResource buttonGlobalTemplate}"/>

    <Style TargetType="{x:Type Thumb}" x:Key="toolBarThumbStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="SizeAll"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent" SnapsToDevicePixels="True">
                        <Rectangle Margin="0, 2">
                            <Rectangle.Fill>
                                <DrawingBrush Viewport="0, 0, 4, 4"
                                              ViewportUnits="Absolute"
                                              Viewbox="0, 0, 8, 8"
                                              ViewboxUnits="Absolute"
                                              TileMode="Tile">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{StaticResource ToolBarThumbBrush}" Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z"/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolBar}" x:Key="toolBarGlobalTemplate">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border x:Name="border" 
                            BorderThickness="1" 
                            BorderBrush="{StaticResource ToolBarBorderBrush}" 
                            Background="{StaticResource ToolBarBackgroundBrush}">
                        <DockPanel>
                            <Thumb x:Name="toolBarThumb" Width="10" Style="{StaticResource toolBarThumbStyle}"/>
                            <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="0, 1, 2, 2"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="toolBarThumb" Property="IsEnabled" Value="False"/>
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="toolBarThumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Menu -->
    <Style TargetType="{x:Type Menu}" x:Key="menuGlobalTemplate">
        <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0, 1, 0, 0"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuBorderBrushBrush}"/>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource MenuItemForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="border">
                        <Grid>
                            <ContentPresenter Margin="6, 5" ContentSource="Header" RecognizesAccessKey="True"/>
                            <Popup x:Name="popup" 
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsSubmenuOpen}" 
                                   AllowsTransparency="True" 
                                   PopupAnimation="Fade" 
                                   MinWidth="80">
                                <Border x:Name="subMenuBorder" SnapsToDevicePixels="True" Background="{StaticResource MenuItemBackgroundBrush}">
                                    <StackPanel IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="popup" Property="PopupAnimation" Value="None"/>
                            <Setter Property="Foreground" Value="{StaticResource MenuItemHoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource MenuItemHoverBackgroundBrush}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MenuItemHoverBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource MenuItemHoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource MenuItemEnabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollViewer -->
    <Style TargetType="{x:Type RepeatButton}" x:Key="upRepeatButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="{StaticResource ScrollBarRepeatButtonBrush}" Points="3,15 15,15 9,3"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RepeatButton}" x:Key="downRepeatButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="{StaticResource ScrollBarRepeatButtonBrush}" Points="3,3 9,15 15,3"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="verticalScrollThumbStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Width="13" Fill="{StaticResource ScrollBarThumbBrush}" RadiusX="5" RadiusY="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- HorizontalScrollBar -->
    <Style TargetType="{x:Type RepeatButton}" x:Key="leftRepeatButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Width="18">
                        <Polygon Fill="{StaticResource ScrollBarRepeatButtonBrush}" Points="15,3 15,15 3,9"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RepeatButton}" x:Key="rightRepeatButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Width="18">
                        <Polygon Fill="{StaticResource ScrollBarRepeatButtonBrush}" Points="15,9 3,3 3,15"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="horizontalScrollThumbStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Height="13" Fill="{StaticResource ScrollBarThumbBrush}" RadiusX="5" RadiusY="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="horizontalScrollBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Height="18">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="3" 
                                Margin="1, 0, 1, 1"
                                Height="15" 
                                VerticalAlignment="Center" 
                                Background="{StaticResource ScrollBarBackgroundBrush}" 
                                CornerRadius="2" />
                        <RepeatButton Grid.Column="0" 
                          Command="ScrollBar.LineLeftCommand" 
                          Style="{StaticResource leftRepeatButtonStyle}"/>
                        <Track Grid.Column="1"
                               Name="PART_Track" 
                               Height="{TemplateBinding Width}" 
                               VerticalAlignment="Center" 
                               IsDirectionReversed="False" 
                               Maximum="{TemplateBinding Maximum}" 
                               Minimum="{TemplateBinding Minimum}"
                               Value="{TemplateBinding Value}">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource horizontalScrollThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Column="2" 
                                      Command="ScrollBar.LineRightCommand" 
                                      Style="{StaticResource rightRepeatButtonStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="verticalScrollBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="18">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="3" 
                                Margin="0, 1, 1, 1"
                                Width="15" 
                                HorizontalAlignment="Center" 
                                Background="{StaticResource ScrollBarBackgroundBrush}" 
                                CornerRadius="2" />
                        <RepeatButton Grid.Row="0" 
                                      Command="ScrollBar.LineUpCommand" 
                                      Style="{StaticResource upRepeatButtonStyle}"/>
                        <Track Grid.Row="1" 
                               Name="PART_Track" 
                               Width="{TemplateBinding Width}" 
                               HorizontalAlignment="Center" 
                               IsDirectionReversed="true" 
                               Maximum="{TemplateBinding Maximum}" 
                               Minimum="{TemplateBinding Minimum}"
                               Value="{TemplateBinding Value}">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource verticalScrollThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" 
                                      Command="ScrollBar.LineDownCommand" 
                                      Style="{StaticResource downRepeatButtonStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" x:Key="scrollViewerGlobalTemplate">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Row="0" Grid.Column="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   Grid.Column="1"                                   
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Orientation="Vertical"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Style="{StaticResource verticalScrollBoxStyle}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                   Grid.Row="1" 
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Maximum="{TemplateBinding ScrollableWidth}" 
                                   Orientation="Horizontal" 
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Style="{StaticResource horizontalScrollBoxStyle}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView -->
    <Style TargetType="{x:Type TreeView}" x:Key="treeViewGlobalTemplate">
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="border" 
                            Background="{StaticResource TreeViewerBackgroundBrush}"
                            BorderBrush="{StaticResource TreeViewerBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="scrollViewer">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource TreeViewerDisabledBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="False">
                            <Setter TargetName="scrollViewer" Property="CanContentScroll" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource selectedBorderColor}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{StaticResource notEnabledBackgroundColor}"/>
        </Style.Resources>
        <Setter Property="Foreground" Value="{StaticResource TreeViewerForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TreeViewerSelectedForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TreeViewerDisabledForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TabControl -->
    <Style TargetType="{x:Type TabControl}" x:Key="tabControlGlobalTemplate">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" Width="{TemplateBinding Width}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Background="Transparent">
                            <TabPanel x:Name="headerPanel" 
                                      Panel.ZIndex="1" 
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1" 
                                      Background="Transparent"/>
                        </Grid>
                        <Border x:Name="border" 
                                Grid.Row="1" 
                                Background="{StaticResource TabControlBackgroundBrush}"
                                BorderBrush="{StaticResource TabControlBorderBrush}" 
                                BorderThickness="2, 2, 2, 0"
                                KeyboardNavigation.TabNavigation="Local" 
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              Margin="4" 
                                              ContentSource="SelectedContent"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource TabControlForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border x:Name="border"
                            Margin="0,0,2,0"
                            BorderThickness="1,1,1,1" 
                            Background="{StaticResource TabControlBackgroundBrush}"                            
                            BorderBrush="{StaticResource TabControlBorderBrush}">
                            <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="12,2,12,2"
                                          RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource TabControlSelectBackgroundBrush}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TabControlSelectBorderBrush}"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource TabControlSelectForegroundBrush}"/>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ComboBox -->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="comboBoxToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="24"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="border" 
                    Grid.ColumnSpan="2" 
                    Background="{StaticResource ComboBoxToggleButtonBackgroundBrush}" 
                    BorderBrush="{StaticResource ComboBoxBorderBrush}" 
                    BorderThickness="1"/>
            <Border x:Name="borderToggle" 
                    Grid.Column="0" 
                    Background="{StaticResource ComboBoxBackgroundBrush}" 
                    BorderBrush="{StaticResource ComboBoxBorderBrush}" 
                    Margin="1" 
                    BorderThickness="0, 0, 1, 0"/>
            <Path x:Name="arrow" 
                  Margin="0, 0, 2, 0"
                  Grid.Column="1" 
                  Fill="{StaticResource ComboBoxArrowBrush}" 
                  HorizontalAlignment="Center" 
                  VerticalAlignment="Center"                   
                  Data="F1 M 5.000,4.564 L 10.000,0.000 L 0.000,0.000 L 5.000,4.564 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="{StaticResource ComboBoxHoverToggleBackgroundBrush}"/>
                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBoxHoverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter TargetName="borderToggle" Property="Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource CombobBoxDisabledBorderBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBoxDiasbledArrowBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTb">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="Transparent"/>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}" x:Key="comboBoxItem">
        <Setter Property="SnapsToDevicePixels"  Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="border" Padding="2" BorderThickness="1" SnapsToDevicePixels="True">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ComboBoxHoverItemBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ComboBoxEnabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="comboBoxGlobalTemplateStyle">
        <Setter Property="Width" Value="auto"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="FontFamily" Value="{StaticResource MainFont}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource comboBoxItem}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Grid.Column="2" 
                                      x:Name="toggleButton" 
                                      Template="{StaticResource comboBoxToggleButton}" 
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ClickMode="Press"/>
                        <ContentPresenter x:Name="contentPresenter"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="6, 3, 23, 3"
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox" 
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTb}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center"
                                 Margin="6, 3, 23, 3" 
                                 Focusable="True" 
                                 Background="Transparent" 
                                 Foreground="{StaticResource ComboBoxForegroundBrush}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="popup"                               
                               Placement="Bottom" 
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               MaxHeight="250"
                               AllowsTransparency="True"
                               Focusable="False" 
                               PopupAnimation="Slide" 
                               Margin="3, -8, -3, 8">
                            <Grid x:Name="dropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}" 
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="dropDownBorder" 
                                        Background="{StaticResource ComboBoxPopupBackgroundBrush}" 
                                        BorderThickness="1" 
                                        Margin="0, 3" 
                                        BorderBrush="{StaticResource ComboBoxBorderBrush}"/>
                                <ScrollViewer Margin="0, 3" 
                                              SnapsToDevicePixels="True" 
                                              Style="{StaticResource scrollViewerGlobalTemplate}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="dropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            <Setter Property="Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                            <Setter Property="Opacity" Value="0.72"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="popup" Property="Popup.AllowsTransparency" Value="True"/>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- UserControl -->
    <Style TargetType="{x:Type UserControl}" x:Key="userControlGlobalTemplateStyle">
        <Setter Property="Background" Value="{StaticResource UserControlsBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource UserControlsBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Expander -->
    <Style TargetType="{x:Type ToggleButton}" x:Key="downOpenTogleBtnStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border>
                        <Grid Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle"
                                     Fill="{StaticResource ExpanderBtnBackgroundBrush}"
                                     HorizontalAlignment="Center"
                                     Height="19"
                                     Stroke="{StaticResource ExpanderBtnBorderBrush}"
                                     VerticalAlignment="Center"
                                     Width="19"/>
                            <Path x:Name="arrow"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  HorizontalAlignment="Center"
                                  SnapsToDevicePixels="True"
                                  Stroke="{StaticResource ExpanderArrowBtnBrush}"
                                  StrokeThickness="2"
                                  VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="Left"
                                              Margin="4, 0, 0, 0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5 L 4.5,1 L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource ExpanderBtnDisabledBorderBrush}"/>
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource ExpanderBtnDisabledBackgroundBrush}"/>
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderArrowDisabledBtnBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{StaticResource ExpanderBtnSelectBorderBrush}"/>
                            <Setter TargetName="circle" Property="Fill" Value="{StaticResource ExpanderBtnSelectBackgroundBrush}"/>
                            <Setter TargetName="circle" Property="StrokeThickness" Value="1.5"/>
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource ExpanderArrowBtnSelectBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="expanderHeaderFocusVisual">
        <Setter Property="ItemsControl.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0"
                                   SnapsToDevicePixels="True"
                                   Stroke="Black"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}" x:Key="expanderGlobalTemplateStyle">
        <Setter Property="Foreground" Value="{StaticResource ExpanderForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="headerSite"
                                          DockPanel.Dock="Top"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FocusVisualStyle="{StaticResource expanderHeaderFocusVisual}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{StaticResource MainFont}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource downOpenTogleBtnStyle}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="expandSite"
                                              DockPanel.Dock="Bottom"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="expandSite" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>